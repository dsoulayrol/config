My shared configuration. -- David Soulayrol <david.soulayrol@gmail.com>

0. Local Configuration Handling

The script scripts/manage_config.sh provides a way to store and share
among one's own machines the files that are not stored in git.

1. Awesome

This Awesome configuration relies on flaw
(http://github.com/dsoulayrol/flaw). Before using the configuration,
these commands must be entered once:

git submodule init
git submodule update

A specific version of flaw will be cloned into awesome/flaw. Git only
tracks this very version, so to let him track the most recent one,
enter the following commands:

cd awesome/flaw
git remote update
git merge origin/master

(See the very good tutorial on
 http://woss.name/2008/04/09/using-git-submodules-to-track-vendorrails/)

2. Mail

I synchronise my personal mail with distant IMAP servers so as to
operate locally with mutt.

I used to do this using isync (aka mbsync) and wrote the script
sync_mail.py to generated the isync configuration on the fly, launch
it and then call procmail with every new mail received. Since I also
needed to fetch mail from a POP server at the office, the script also
generates a configuration for fetchmail and calls it.

This was not correct because some of my procmail's rules could move
mail for no good reason and broke the synchronisation between my mails
on different machines. Actually no mail was ever lost, but flags
synchronisation was.

So I now sort my mail on server side, and because my hosting does not
provide intelligent filtering, I use imapfilter. I also switched from
isync to offlineimap, because I think the latest is quicker, and its
logs are clearer (YMMV of course).

3. Calendar

I use remind to store well known dates as well as meetings. Two
configurations are provided:

- all.rem displays complex and colorful information, thanks to
  Fran√ßois Cerbelle's help. The scripts update_birthdays.sh and
  update_feastdays.sh are helpers to feed the calendar with special
  days for the contacts found in the abook base. It is dedicated to be
  used in a console, or to generate a printed full calendar.

- events.rem only relies on personal events, either stored with mutt
  or manually. It is aimed at being loaded in daemon mode so as to
  send on screen notifications.

Both rely on the provided files and on batch_events and static_events
which should be stored in ~/.remind. Birthdays and feast days for
all.rem are stored in birthdays and feastdays in the same directory.
